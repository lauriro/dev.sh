#!/bin/sh

. ./gitserv

is_admin

ver() {
	git describe --long --dirty 2>/dev/null || \
	echo "g$(git rev-parse --short HEAD)$(git diff --no-ext-diff --quiet --exit-code || echo '-dirty')"
}

# Check object consistency on every push
git config --system receive.fsckObjects true
# refuse force-pushes
git config --system receive.denyNonFastForwards true
# One of the workarounds to the denyNonFastForwards policy is for the user to
# delete the branch and then push it back up with the new reference.
# To avoid this, set receive.denyDeletes to true
git config --system receive.denyDeletes true

case $1 in
print)
	printf "Version: %s\n" "$(ver)"
	printf "PWD:     %s\n" "$PWD"
	printf "ROOT:    %s\n" "$ROOT"
	printf "LOG:     %s\n" "$LOG"
	printf "KEY:     %s\n" "$KEY"
	cat users.conf
	;;
update)
	printf "Old version: %s\n" "$(ver)"
	git pull
	test -n "$3" && git reset --hard "$3"
	printf "New version: %s\n" "$(ver)"
	;;
reset)
	printf "" > $FILE
	;;
*)
	# Prepare .ssh folder and files
	mkdir -p "$ROOT" $(dirname $KEY) "$(dirname $LOG)"
	touch $KEY
	chmod 700 $(dirname $KEY)
	chmod 600 $KEY

	test -w "$KEY" || die "File '$KEY' is not writable"

	# sudo chsh -s /usr/bin/git-shell gituser

	;;
esac



